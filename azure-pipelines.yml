variables:
  patch: $[counter('versioncounter', 100)]

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

  # We want to run `npm version` but this makes a commit so need to configure the git user first
- script: git config --global user.name "npm" && git config --global user.email "npm@npm.com" && npm version 1.0.$(patch)
  displayName: "npm version to update package version"

- script: npm install
  displayName: 'npm install'

- script: npm run lint
  displayName: 'tslint'

- script: npm run build
  displayName: 'npm run build'

- script: npm test
  displayName: 'npm test'

- script: |
    npm install -g bundle-deps
    bundle-deps .
  displayName: 'Bundle npm dependencies into package'

- script: npm pack
  displayName: "Package npm for storage as artifact"
  
- task: CopyFiles@2
  inputs:
    contents: armval*
    targetFolder: $(Build.ArtifactStagingDirectory)
    
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    artifactName: "armviz.tgz"

  # If we're on master publish to NPM
- task: Npm@1
  condition: and(succeeded(), eq(variables['System.PullRequest.IsFork'], 'False'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: "Publish package to npm"
  inputs:
    command: publish
    publishEndpoint: 'npm'


